async function getSortedPostsByTitleLength() {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts');
    const posts = await response.json();
    const sorted = posts.sort((a, b) => b.title.length - a.title.length);
    console.log('üìò [async] –ü–æ—Å—Ç—ã –ø–æ –¥–ª–∏–Ω–µ title:', sorted);
  }
  
  async function getSortedCommentsByAuthor() {
    const response = await fetch('https://jsonplaceholder.typicode.com/comments');
    const comments = await response.json();
    const sorted = comments.sort((a, b) => a.name.localeCompare(b.name));
    console.log('üí¨ [async] –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞:', sorted);
  }
  
  async function getFilteredUsers() {
    const response = await fetch('https://jsonplaceholder.typicode.com/users');
    const users = await response.json();
    const filtered = users.map(user => ({
      id: user.id,
      name: user.name,
      username: user.username,
      email: user.email,
      phone: user.phone
    }));
    console.log('üë§ [async] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏:', filtered);
  }
  
  async function getIncompleteTodos() {
    const response = await fetch('https://jsonplaceholder.typicode.com/todos');
    const todos = await response.json();
    const filtered = todos.filter(todo => !todo.completed);
    console.log('üìã [async] –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:', filtered);
  }
  
  // –í—ã–∑–æ–≤—ã:
  getSortedPostsByTitleLength();
  getSortedCommentsByAuthor();
  getFilteredUsers();
  getIncompleteTodos();